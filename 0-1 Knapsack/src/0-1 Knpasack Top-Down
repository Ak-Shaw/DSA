int knapsack(wt[], int val[], int w, int n) {
  // base case
  if(n == 0 || w == 0) {
      return 0;
  }
  
  // If weight of the nth item is more 
  // than Knapsack capacity w, then reject the item
  if(wt[n-1] > w) {
      return knapsack(wt, val, w, n-1);
  }
  
  //now there are 2 options: include the item or reject and move towards the next item
  // the max of the two should be taken
  return max(val[n-1] + knapsack(wt, val, w - wt[n-1], n-1), knapsack(wt, val, w, n-1));
}
